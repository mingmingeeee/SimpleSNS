spring.datasource:
  hikari.maximum-pool-size: 4
  url: jdbc:postgresql://svc.sel3.cloudtype.app:30271/sns
  username: root
  password: root0613
  platform: postgres
  driver-class-name: org.postgresql.Driver

spring.jpa:
  database: postgresql
  hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
  hibernate.ddl-auto: update
  properties.hibernate.format_sql: true
  show-sql: true

jwt:
  secret-key: minjeong.sns-2023.secret_key.more.more
  token.expired-time-ms: 2592000000 # 24*60*60*30 -> 30?

spring.redis.url: redis://svc.sel3.cloudtype.app:31231

# yml 사용하는 이유: 결합성 줄이기 위해


spring:
  kafka:
    properties:
      security.protocol: SASL_SSL
      sasl.mechanism: SCRAM-SHA-256
      sasl.jaas.config: org.apache.kafka.common.security.scram.ScramLoginModule required username="r2rj2fh0" password="e_BnIr6ESAbpmuu7L7XugsMNmYlx3eFq";
    consumer:
      properties.spring.json.trusted.packages: "*"
      bootstrap-servers: dory-01.srvs.cloudkafka.com:9094, dory-02.srvs.cloudkafka.com:9094, dory-03.srvs.cloudkafka.com:9094
      group-id: notification
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.IntegerDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    listener:
      ack-mode: MANUAL
    producer:
      bootstrap-servers: dory-01.srvs.cloudkafka.com:9094, dory-02.srvs.cloudkafka.com:9094, dory-03.srvs.cloudkafka.com:9094
      key-serializer: org.apache.kafka.common.serialization.IntegerSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties.enable.idempotence: false
    topic:
      notification: r2rj2fh0-notification
